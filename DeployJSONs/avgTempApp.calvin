/*
This file specifies the ip->op mappings of the actors and
forms an applications graph across multiple runtimes
*/


#Actor specs

rand0: math.Random(lower=30, upper=50)
rand1: math.Random(lower=30, upper=50)
rand2: math.Random(lower=30, upper=50)
rand3: math.Random(lower=30, upper=50)
rand4: math.Random(lower=30, upper=50)


sensor0 : std.Trigger(tick = 2.0, data=null)
sensor1 : std.Trigger(tick = 2.0, data=null)
sensor2 : std.Trigger(tick = 2.0, data=null)
sensor3 : std.Trigger(tick = 2.0, data=null)
sensor4 : std.Trigger(tick = 2.0, data=null)

node1 : math.ComputeAverage()
node2 : math.ComputeAverage()
node3 : math.ComputeAverage()
node4 : math.ComputeAverage()
out : io.Log(loglevel="INFO")

#Actor logical connections

#Start Node
sensor0.data > rand0.trigger
sensor1.data > rand1.trigger
rand0.integer > node1.temp_sensor
rand1.integer > node1.temp_network


sensor2.data > rand2.trigger
node1.result > node2.temp_network
rand2.integer > node2.temp_sensor


sensor3.data > rand3.trigger
rand3.integer > node3.temp_sensor
node2.result > node3.temp_network


sensor4.data > rand4.trigger
rand4.integer > node4.temp_sensor
node3.result > node4.temp_network

#final result of all the node data flow
# Result Destination Node
node4.result > out.data